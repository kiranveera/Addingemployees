{"version":3,"sources":["D:/angularprojects/Employeesadding/node_modules/@ngx-formly/bootstrap/fesm2015/ngx-formly-bootstrap-addons.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAmBC;;;;;;;;;0BAOC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAwBD;;;;;;;;;;;;;;;;;;;;0BAiBC","file":"ngx-formly-bootstrap-addons.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Component, NgModule } from '@angular/core';\nimport { FieldWrapper, FormlyModule } from '@ngx-formly/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FormlyWrapperAddons extends FieldWrapper {\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    addonRightClick($event) {\n        if (this.to.addonRight.onClick) {\n            this.to.addonRight.onClick(this.to, this, $event);\n        }\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    addonLeftClick($event) {\n        if (this.to.addonLeft.onClick) {\n            this.to.addonLeft.onClick(this.to, this, $event);\n        }\n    }\n}\nFormlyWrapperAddons.decorators = [\n    { type: Component, args: [{\n                selector: 'formly-wrapper-addons',\n                template: \"<div class=\\\"input-group\\\">\\n  <div class=\\\"input-group-prepend\\\" *ngIf=\\\"to.addonLeft\\\" [ngStyle]=\\\"{cursor: to.addonLeft.onClick ? 'pointer' : 'inherit'}\\\"\\n    (click)=\\\"addonLeftClick($event)\\\">\\n    <i class=\\\"input-group-text\\\" [ngClass]=\\\"to.addonLeft.class\\\" *ngIf=\\\"to.addonLeft.class\\\"></i>\\n    <span *ngIf=\\\"to.addonLeft.text\\\" class=\\\"input-group-text\\\">{{ to.addonLeft.text }}</span>\\n  </div>\\n  <div class=\\\"input-addons\\\">\\n    <ng-container #fieldComponent></ng-container>\\n  </div>\\n  <div class=\\\"input-group-append\\\" *ngIf=\\\"to.addonRight\\\" [ngStyle]=\\\"{cursor: to.addonRight.onClick ? 'pointer' : 'inherit'}\\\"\\n    (click)=\\\"addonRightClick($event)\\\">\\n    <i class=\\\"input-group-text\\\" [ngClass]=\\\"to.addonRight.class\\\" *ngIf=\\\"to.addonRight.class\\\"></i>\\n    <span *ngIf=\\\"to.addonRight.text\\\" class=\\\"input-group-text\\\">{{ to.addonRight.text }}</span>\\n  </div>\\n</div>\\n\",\n                styles: [\":host ::ng-deep .input-group>:not(:first-child) .form-control{border-top-left-radius:0;border-bottom-left-radius:0}:host ::ng-deep .input-group>:not(:last-child) .form-control{border-top-right-radius:0;border-bottom-right-radius:0}:host ::ng-deep .input-group>.input-addons{position:relative;flex:1 1 auto;width:1%;margin-bottom:0}\"]\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} field\n * @return {?}\n */\nfunction addonsExtension(field) {\n    if (!field.templateOptions || (field.wrappers && field.wrappers.indexOf('addons') !== -1)) {\n        return;\n    }\n    if (field.templateOptions.addonLeft || field.templateOptions.addonRight) {\n        field.wrappers = [...(field.wrappers || []), 'addons'];\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FormlyBootstrapAddonsModule {\n}\nFormlyBootstrapAddonsModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [FormlyWrapperAddons],\n                imports: [\n                    CommonModule,\n                    ReactiveFormsModule,\n                    FormlyModule.forChild({\n                        wrappers: [\n                            { name: 'addons', component: FormlyWrapperAddons },\n                        ],\n                        extensions: [\n                            { name: 'addons', extension: { postPopulate: addonsExtension } },\n                        ],\n                    }),\n                ],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { FormlyBootstrapAddonsModule, addonsExtension as ɵb, FormlyWrapperAddons as ɵa };\n"]}